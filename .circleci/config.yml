defaults: &defaults
  environment:
    OUTPUT: /output/workspace/qlik-cli

only-version-tags: &only-version-tags
  filters:
    tags:
      only: /^v\d+\.\d+\.\d+-.*/

version: 2
jobs:
  build:
    <<: *defaults
    docker:
      - image: microsoft/powershell:ubuntu-16.04
    steps:
      - run:
          name: Install git
          command: apt-get -qq update; apt-get -y install git
      - checkout
      - run:
          name: Create output directories
          shell: pwsh
          command: |
            echo $env:OUTPUT
            New-Item -ItemType Directory -Force -Path $env:OUTPUT/functions
            New-Item -ItemType Directory -Force -Path $env:OUTPUT/resources
      - run:
          name: Copy files to output directory
          shell: pwsh
          command: |
            $psd = Import-PowerShellDataFile -Path ./Qlik-Cli.psd1
            $psd.NestedModules.ForEach({
              Copy-Item -Path $_ -Destination "$env:OUTPUT/$_".Replace('\', '/') -Force
            })
            Copy-Item -Path $psd.RootModule -Destination "$env:OUTPUT/"
            Copy-Item -Path ./Qlik-Cli.psd1 -Destination "$env:OUTPUT/"
            Copy-Item -Path ./tests/ -Destination "$env:OUTPUT/" -Recurse -Force
      - run:
          name: Update module manifest
          shell: pwsh
          command: |
            Push-Location $env:OUTPUT
            $psd = Import-PowerShellDataFile -Path ./Qlik-Cli.psd1
            Import-Module ./Qlik-Cli.psd1
            $cmd = Get-Command -Module Qlik-Cli
            $version = if($env:CIRCLE_TAG) { $env:CIRCLE_TAG } else { '1.0.0' }
            $version -match "\d+\.\d+\.\d+" | Out-Null
            [CultureInfo]::CurrentCulture = 'en-GB'
            Update-ModuleManifest `
              -Path $env:OUTPUT/Qlik-Cli.psd1 `
              -ModuleVersion $matches[0] `
              -NestedModules $psd.NestedModules `
              -FunctionsToExport $cmd.Name
      - persist_to_workspace:
          root: /output/workspace
          paths:
            - qlik-cli

  test:
    <<: *defaults
    docker:
      - image: microsoft/powershell:ubuntu-16.04
    steps:
      - checkout
      - attach_workspace:
          at: /output/workspace
      - run:
          name: Test module
          command: pwsh -File ./.circleci/scripts/test-module.ps1 -Path $OUTPUT
      - store_test_results:
          path: /output/test-results
      - store_artifacts:
          path: /output/test-results
          destination: test-results
      - persist_to_workspace:
          root: /output/workspace/
          paths:
            - ./*

  pre-release-checks:
    <<: *defaults
    docker:
      - image: microsoft/powershell:ubuntu-16.04
        command: pwsh
    steps:
      - checkout
      - attach_workspace:
          at: /output/workspace
      - run:
          name: Pre-release checks
          command: pwsh -File ./.circleci/scripts/pre-release-checks.ps1 -Path $OUTPUT
      - store_artifacts:
          path: /output/workspace/qlik-cli
          destination: build

  publish-powershell-gallery:
    docker:
      - image: microsoft/powershell:ubuntu-16.04
        command: pwsh
    working_directory: /output/workspace/qlik-cli
    steps:
      - attach_workspace:
          at: /output/workspace
      - run:
          name: Install .Net Core SDK
          command: apt-get update && apt-get install -y dotnet-sdk-2.1.4
      - run:
          name: Publish module to PowerShell Gallery
          command: |
            pwsh -Command 'Publish-Module `
              -Path ./ `
              -NuGetApiKey $env:PSG_API_KEY `
              -Tags Qlik, Sense, Windows `
              -Verbose'

  publish-github-release:
    <<: *defaults
    docker:
      - image: cibuilds/github:latest
    working_directory: /output/workspace/qlik-cli
    steps:
      - attach_workspace:
          at: /output/workspace
      - run:
          name: Publish release on GitHub
          command: |
            VERSION=$(echo $CIRCLE_TAG | sed -n 's/v\([0-9]\+\.[0-9]\+\.[0-9]\+\)/\1/p')
            if [[ $VERSION =~ "-" ]]
            then
              args="--prerelease --draft"
            fi
            ghr -t ${GITHUB_TOKEN} \
                -u ${CIRCLE_PROJECT_USERNAME} \
                -r ${CIRCLE_PROJECT_REPONAME} \
                -c ${CIRCLE_SHA1} \
                ${VERSION} ${args} \
                /output/workspace/Qlik-Cli.psm1

workflows:
  version: 2
  test-and-deploy:
    jobs:
      - build:
          <<: *only-version-tags
          filters:
            branches:
              ignore: /circleci/
      - test:
          <<: *only-version-tags
          requires:
            - build
          filters:
            branches:
              ignore: gh-pages
      - pre-release-checks:
          <<: *only-version-tags
          requires:
            - test
      - publish-powershell-gallery:
          requires:
            - pre-release-checks
          filters:
            tags:
              only: /^v\d+\.\d+\.\d+$/
      - publish-github-release:
          <<: *only-version-tags
          requires:
            - pre-release-checks
